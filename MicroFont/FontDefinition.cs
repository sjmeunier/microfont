using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MicroFont
{
    public class FontDefinition
    {
        public Dictionary<char, int[,]> Characters;

        public FontDefinition()
        {
            Characters = new Dictionary<char, int[,]>();

            Characters.Add('A', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 1 }, { 1, 1, 1 }, { 1, 0, 1 }, { 1, 0, 1 } });
            Characters.Add('B', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 1 }, { 1, 1, 0 }, { 1, 0, 1 }, { 1, 1, 1 } });
            Characters.Add('C', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 0 }, { 1, 0, 0 }, { 1, 0, 0 }, { 1, 0, 1 } });
            Characters.Add('D', new int[5, 3] { { 1, 1, 0 }, { 1, 0, 1 }, { 1, 0, 1 }, { 1, 0, 1 }, { 1, 0, 0 } });
            Characters.Add('E', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 0 }, { 1, 1, 0 }, { 1, 0, 0 }, { 1, 0, 1 } });
            Characters.Add('F', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 0 }, { 1, 1, 0 }, { 1, 0, 0 }, { 1, 0, 0 } });
            Characters.Add('G', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 0 }, { 1, 0, 1 }, { 1, 0, 1 }, { 1, 1, 1 } });
            Characters.Add('H', new int[5, 3] { { 1, 0, 1 }, { 1, 0, 1 }, { 1, 1, 1 }, { 1, 0, 1 }, { 1, 0, 1 } });
            Characters.Add('I', new int[5, 3] { { 1, 1, 1 }, { 0, 1, 0 }, { 0, 1, 0 }, { 0, 1, 0 }, { 1, 1, 1 } });
            Characters.Add('J', new int[5, 3] { { 1, 1, 1 }, { 0, 1, 0 }, { 0, 1, 0 }, { 0, 1, 0 }, { 1, 1, 0 } });
            Characters.Add('K', new int[5, 3] { { 1, 0, 0 }, { 1, 0, 1 }, { 1, 1, 0 }, { 1, 0, 1 }, { 1, 0, 1 } });
            Characters.Add('L', new int[5, 3] { { 1, 0, 0 }, { 1, 0, 0 }, { 1, 0, 0 }, { 1, 0, 0 }, { 1, 1, 1 } });
            Characters.Add('M', new int[5, 3] { { 1, 0, 1 }, { 1, 1, 1 }, { 1, 1, 1 }, { 1, 0, 1 }, { 1, 0, 1 } });
            Characters.Add('N', new int[5, 3] { { 1, 0, 1 }, { 1, 1, 1 }, { 1, 1, 1 }, { 1, 1, 1 }, { 1, 0, 1 } });
            Characters.Add('O', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 1 }, { 1, 0, 1 }, { 1, 0, 1 }, { 1, 1, 1 } });
            Characters.Add('P', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 1 }, { 1, 1, 1 }, { 1, 0, 0 }, { 1, 0, 0 } });
            Characters.Add('Q', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 1 }, { 1, 0, 1 }, { 1, 1, 1 }, { 1, 1, 1 } });
            Characters.Add('R', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 1 }, { 1, 1, 0 }, { 1, 0, 1 }, { 1, 0, 1 } });
            Characters.Add('S', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 0 }, { 1, 1, 1 }, { 0, 0, 1 }, { 1, 1, 1 } });
            Characters.Add('T', new int[5, 3] { { 1, 1, 1 }, { 0, 1, 0 }, { 0, 1, 0 }, { 0, 1, 0 }, { 0, 1, 0 } });
            Characters.Add('U', new int[5, 3] { { 1, 0, 1 }, { 1, 0, 1 }, { 1, 0, 1 }, { 1, 0, 1 }, { 0, 1, 0 } });
            Characters.Add('V', new int[5, 3] { { 1, 0, 1 }, { 1, 0, 1 }, { 1, 0, 1 }, { 0, 1, 0 }, { 0, 1, 0 } });
            Characters.Add('W', new int[5, 3] { { 1, 0, 1 }, { 1, 0, 1 }, { 1, 1, 1 }, { 1, 1, 1 }, { 1, 0, 1 } });
            Characters.Add('X', new int[5, 3] { { 1, 0, 1 }, { 1, 0, 1 }, { 0, 1, 0 }, { 1, 0, 1 }, { 1, 0, 1 } });
            Characters.Add('Y', new int[5, 3] { { 1, 0, 1 }, { 1, 0, 1 }, { 1, 1, 1 }, { 0, 1, 0 }, { 0, 1, 0 } });
            Characters.Add('Z', new int[5, 3] { { 1, 1, 1 }, { 0, 0, 1 }, { 0, 1, 0 }, { 1, 0, 0 }, { 1, 1, 1 } });
            Characters.Add('1', new int[5, 3] { { 0, 1, 0 }, { 0, 1, 0 }, { 0, 1, 0 }, { 0, 1, 0 }, { 1, 1, 1 } });
            Characters.Add('2', new int[5, 3] { { 1, 1, 1 }, { 0, 0, 1 }, { 0, 1, 1 }, { 1, 1, 0 }, { 1, 1, 1 } });
            Characters.Add('3', new int[5, 3] { { 1, 1, 1 }, { 0, 0, 1 }, { 0, 1, 1 }, { 0, 0, 1 }, { 1, 1, 1 } });
            Characters.Add('4', new int[5, 3] { { 1, 0, 0 }, { 1, 0, 0 }, { 1, 1, 0 }, { 1, 1, 1 }, { 0, 1, 0 } });
            Characters.Add('5', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 0 }, { 1, 1, 0 }, { 0, 0, 1 }, { 1, 1, 0 } });
            Characters.Add('6', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 0 }, { 1, 1, 1 }, { 1, 0, 1 }, { 1, 1, 1 } });
            Characters.Add('7', new int[5, 3] { { 1, 1, 1 }, { 0, 0, 1 }, { 0, 0, 1 }, { 0, 0, 1 }, { 0, 0, 1 } });
            Characters.Add('8', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 1 }, { 1, 1, 1 }, { 1, 0, 1 }, { 1, 1, 1 } });
            Characters.Add('9', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 1 }, { 1, 1, 1 }, { 0, 0, 1 }, { 0, 0, 1 } });
            Characters.Add('0', new int[5, 3] { { 0, 1, 0 }, { 1, 0, 1 }, { 1, 0, 1 }, { 1, 0, 1 }, { 0, 1, 0 } });
            Characters.Add('!', new int[5, 3] { { 0, 1, 0 }, { 0, 1, 0 }, { 0, 1, 0 }, { 0, 0, 0 }, { 0, 1, 0 } });
            Characters.Add('\"', new int[5, 3] { { 1, 0, 1 }, { 1, 0, 1 }, { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } });
            Characters.Add('#', new int[5, 3] { { 1, 0, 1 }, { 1, 1, 1 }, { 1, 0, 1 }, { 1, 1, 1 }, { 1, 0, 1 } });
            Characters.Add('$', new int[5, 3] { { 1, 1, 1 }, { 1, 1, 0 }, { 1, 1, 1 }, { 0, 1, 1 }, { 1, 1, 1 } });
            Characters.Add('%', new int[5, 3] { { 1, 0, 1 }, { 0, 0, 1 }, { 0, 1, 0 }, { 1, 0, 0 }, { 1, 0, 1 } });
            Characters.Add('&', new int[5, 3] { { 0, 1, 0 }, { 1, 0, 1 }, { 1, 1, 1 }, { 1, 0, 1 }, { 1, 1, 1 } });
            Characters.Add('\'', new int[5, 3] { { 0, 1, 0 }, { 0, 1, 0 }, { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } });
            Characters.Add('(', new int[5, 3] { { 0, 1, 1 }, { 1, 0, 0 }, { 1, 0, 0 }, { 1, 0, 0 }, { 0, 1, 1 } });
            Characters.Add(')', new int[5, 3] { { 1, 1, 0 }, { 0, 0, 1 }, { 0, 0, 1 }, { 0, 0, 1 }, { 1, 1, 0 } });
            Characters.Add('*', new int[5, 3] { { 0, 0, 0 }, { 0, 1, 0 }, { 1, 1, 1 }, { 0, 1, 0 }, { 1, 0, 1 } });
            Characters.Add('+', new int[5, 3] { { 0, 0, 0 }, { 0, 1, 0 }, { 1, 1, 1 }, { 0, 1, 0 }, { 0, 0, 0 } });
            Characters.Add(',', new int[5, 3] { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 }, { 0, 1, 1 }, { 1, 1, 0 } });
            Characters.Add('.', new int[5, 3] { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 }, { 0, 1, 1 }, { 0, 1, 1 } });
            Characters.Add(':', new int[5, 3] { { 0, 0, 0 }, { 0, 1, 0 }, { 0, 0, 0 }, { 0, 1, 0 }, { 0, 0, 0 } });
            Characters.Add(';', new int[5, 3] { { 0, 0, 0 }, { 0, 1, 0 }, { 0, 0, 0 }, { 0, 1, 0 }, { 1, 0, 0 } });
            Characters.Add('<', new int[5, 3] { { 0, 0, 1 }, { 0, 1, 0 }, { 1, 0, 0 }, { 0, 1, 0 }, { 0, 0, 1 } });
            Characters.Add('>', new int[5, 3] { { 1, 0, 0 }, { 0, 1, 0 }, { 0, 0, 1 }, { 0, 1, 0 }, { 1, 0, 0 } });
            Characters.Add('?', new int[5, 3] { { 1, 1, 1 }, { 0, 0, 1 }, { 0, 1, 0 }, { 0, 0, 0 }, { 0, 1, 0 } });
            Characters.Add('@', new int[5, 3] { { 1, 1, 1 }, { 1, 0, 1 }, { 1, 0, 1 }, { 1, 1, 1 }, { 1, 1, 1 } });
            Characters.Add('=', new int[5, 3] { { 0, 0, 0 }, { 1, 1, 1 }, { 0, 0, 0 }, { 1, 1, 1 }, { 0, 0, 0 } });
            Characters.Add('[', new int[5, 3] { { 1, 1, 0 }, { 1, 0, 0 }, { 1, 0, 0 }, { 1, 0, 0 }, { 1, 1, 0 } });
            Characters.Add(']', new int[5, 3] { { 0, 1, 1 }, { 0, 0, 1 }, { 0, 0, 1 }, { 0, 0, 1 }, { 0, 1, 1 } });
            Characters.Add('-', new int[5, 3] { { 0, 0, 0 }, { 0, 0, 0 }, { 1, 1, 1 }, { 0, 0, 0 }, { 0, 0, 0 } });
            Characters.Add(' ', new int[5, 3] { { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } });
        }
    }
}
